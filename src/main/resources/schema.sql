DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friendship CASCADE;
DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS likes CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS film_genre CASCADE;


CREATE TABLE IF NOT EXISTS users (
    id       INT            GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR(60)    NOT NULL,
    login    VARCHAR(60)    NOT NULL,
    name     VARCHAR(60),
    birthday DATE
    );

CREATE TABLE IF NOT EXISTS friendship (
    user_id    INT     NOT NULL,
    friend_id  INT     NOT NULL,
    accept     boolean NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS mpa (
    id    INT          GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mpa   VARCHAR(6)   NOT NULL
    );

CREATE TABLE IF NOT EXISTS films (
    id           INT             GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(100),
    description  VARCHAR(200),
    release_date DATE,
    duration     INT,
    mpa_id       INT,
    FOREIGN KEY (mpa_id)         REFERENCES mpa (id)
    );

CREATE TABLE IF NOT EXISTS likes (
    film_id INT NOT NULL,
    user_id INT NOT NULL,
    FOREIGN KEY (film_id) REFERENCES films (id),
    FOREIGN KEY (user_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS genres (
    id      INT           GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre   VARCHAR(20)   NOT NULL
    );

CREATE TABLE IF NOT EXISTS film_genre (
    film_id  INT NOT NULL,
    genre_id INT NOT NULL,
    FOREIGN KEY (film_id)  REFERENCES films (id),
    FOREIGN KEY (genre_id) REFERENCES genres (id)
);